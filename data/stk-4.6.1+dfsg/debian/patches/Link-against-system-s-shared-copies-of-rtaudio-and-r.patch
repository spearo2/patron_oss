From: Alessio Treglia <alessio@debian.org>
Date: Mon, 21 Sep 2015 09:20:43 -0300
Subject: Link against system's shared copies of rtaudio and rtmidi.

Forwarded: no
---
 projects/demo/Makefile.in        |  3 ++-
 projects/effects/Makefile.in     |  3 ++-
 projects/eguitar/Makefile.in     |  3 ++-
 projects/examples/Makefile.in    | 52 ++++++++++++++++++++--------------------
 projects/examples/libMakefile.in |  1 +
 projects/ragamatic/Makefile.in   |  3 ++-
 src/Makefile.in                  |  3 ++-
 7 files changed, 37 insertions(+), 31 deletions(-)

diff --git a/projects/demo/Makefile.in b/projects/demo/Makefile.in
index f27444b..3f774ff 100644
--- a/projects/demo/Makefile.in
+++ b/projects/demo/Makefile.in
@@ -40,7 +40,8 @@ LIBRARY = @LIBS@
 REALTIME = @realtime@
 ifeq ($(REALTIME),yes)
   PROGRAMS += stk-demo
-	OBJECTS += RtMidi.o RtAudio.o Thread.o Mutex.o Socket.o TcpServer.o @objects@
+	OBJECTS += Thread.o Mutex.o Socket.o TcpServer.o @objects@
+	LIBRARY += -lrtaudio -lrtmidi
 endif
 
 RAWWAVES = @rawwaves@
diff --git a/projects/effects/Makefile.in b/projects/effects/Makefile.in
index 59ba62c..0fd65a2 100644
--- a/projects/effects/Makefile.in
+++ b/projects/effects/Makefile.in
@@ -29,7 +29,8 @@ LIBRARY = @LIBS@
 REALTIME = @realtime@
 ifeq ($(REALTIME),yes)
   PROGRAMS += effects
-	OBJECTS += RtMidi.o RtAudio.o Thread.o Mutex.o Socket.o TcpServer.o @objects@
+	OBJECTS += Thread.o Mutex.o Socket.o TcpServer.o @objects@
+	LIBRARY += -lrtaudio -lrtmidi
 endif
 
 RAWWAVES = @rawwaves@
diff --git a/projects/eguitar/Makefile.in b/projects/eguitar/Makefile.in
index 9684724..806e4b2 100644
--- a/projects/eguitar/Makefile.in
+++ b/projects/eguitar/Makefile.in
@@ -29,7 +29,8 @@ LIBRARY = @LIBS@
 REALTIME = @realtime@
 ifeq ($(REALTIME),yes)
   PROGRAMS += eguitar
-	OBJECTS += RtMidi.o RtAudio.o Thread.o Mutex.o Socket.o TcpServer.o @objects@
+	OBJECTS += Thread.o Mutex.o Socket.o TcpServer.o @objects@
+	LIBRARY += -lrtaudio -lrtmidi
 endif
 
 RAWWAVES = @rawwaves@
diff --git a/projects/examples/Makefile.in b/projects/examples/Makefile.in
index 0b99516..aa102c9 100644
--- a/projects/examples/Makefile.in
+++ b/projects/examples/Makefile.in
@@ -56,26 +56,26 @@ distclean: clean
 strip : 
 	strip $(PROGRAMS)
 
-audioprobe: RtAudio.o @objects@
-	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o audioprobe audioprobe.cpp $(OBJECT_PATH)/*.o $(LIBRARY)
+audioprobe: @objects@
+	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o audioprobe audioprobe.cpp $(OBJECT_PATH)/*.o $(LIBRARY) -lrtaudio
 
-midiprobe: RtMidi.o
-	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o midiprobe midiprobe.cpp $(OBJECT_PATH)/RtMidi.o $(LIBRARY)
+midiprobe:
+	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o midiprobe midiprobe.cpp $(LIBRARY) -lrtmidi
 
-play: play.cpp Stk.o FileRead.o FileWvIn.o RtAudio.o
-	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o play play.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/FileRead.o $(OBJECT_PATH)/FileWvIn.o $(OBJECT_PATH)/RtAudio.o $(LIBRARY)
+play: play.cpp Stk.o FileRead.o FileWvIn.o
+	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o play play.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/FileRead.o $(OBJECT_PATH)/FileWvIn.o $(LIBRARY) -lrtaudio
 
-record: record.cpp Stk.o FileWrite.o FileWvOut.o RtWvIn.o RtAudio.o Mutex.o
-	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o record record.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/FileWrite.o $(OBJECT_PATH)/FileWvOut.o $(OBJECT_PATH)/RtWvIn.o $(OBJECT_PATH)/Mutex.o $(OBJECT_PATH)/RtAudio.o $(LIBRARY)
+record: record.cpp Stk.o FileWrite.o FileWvOut.o RtWvIn.o Mutex.o
+	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o record record.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/FileWrite.o $(OBJECT_PATH)/FileWvOut.o $(OBJECT_PATH)/RtWvIn.o $(OBJECT_PATH)/Mutex.o $(LIBRARY) -lrtaudio
 
 sine: sine.cpp Stk.o SineWave.o FileWrite.o FileWvOut.o
 	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o sine sine.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/SineWave.o $(OBJECT_PATH)/FileWrite.o $(OBJECT_PATH)/FileWvOut.o $(LIBRARY)
 
-duplex: duplex.cpp RtAudio.o
-	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o duplex duplex.cpp $(OBJECT_PATH)/RtAudio.o $(LIBRARY)
+duplex: duplex.cpp
+	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o duplex duplex.cpp $(LIBRARY) -lrtaudio
 
-inetIn: inetIn.cpp Stk.o InetWvIn.o RtWvOut.o RtAudio.o Socket.o TcpServer.o UdpSocket.o Thread.o Mutex.o
-	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o inetIn inetIn.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/InetWvIn.o $(OBJECT_PATH)/Socket.o $(OBJECT_PATH)/TcpServer.o $(OBJECT_PATH)/UdpSocket.o $(OBJECT_PATH)/Thread.o $(OBJECT_PATH)/Mutex.o $(OBJECT_PATH)/RtWvOut.o $(OBJECT_PATH)/RtAudio.o $(LIBRARY)
+inetIn: inetIn.cpp Stk.o InetWvIn.o RtWvOut.o Socket.o TcpServer.o UdpSocket.o Thread.o Mutex.o
+	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o inetIn inetIn.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/InetWvIn.o $(OBJECT_PATH)/Socket.o $(OBJECT_PATH)/TcpServer.o $(OBJECT_PATH)/UdpSocket.o $(OBJECT_PATH)/Thread.o $(OBJECT_PATH)/Mutex.o $(OBJECT_PATH)/RtWvOut.o $(LIBRARY) -lrtaudio
 
 inetOut: inetOut.cpp Stk.o FileRead.o FileWvIn.o InetWvOut.o Socket.o TcpClient.o UdpSocket.o Thread.o Mutex.o
 	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o inetOut inetOut.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/FileRead.o $(OBJECT_PATH)/FileWvIn.o $(OBJECT_PATH)/Socket.o $(OBJECT_PATH)/TcpClient.o $(OBJECT_PATH)/UdpSocket.o $(OBJECT_PATH)/Thread.o $(OBJECT_PATH)/Mutex.o $(OBJECT_PATH)/InetWvOut.o $(LIBRARY)
@@ -83,26 +83,26 @@ inetOut: inetOut.cpp Stk.o FileRead.o FileWvIn.o InetWvOut.o Socket.o TcpClient.
 sineosc: sineosc.cpp Stk.o FileRead.o FileWvIn.o FileLoop.o FileWrite.o FileWvOut.o
 	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o sineosc sineosc.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/FileWrite.o $(OBJECT_PATH)/FileRead.o $(OBJECT_PATH)/FileWvIn.o $(OBJECT_PATH)/FileWvOut.o $(OBJECT_PATH)/FileLoop.o $(LIBRARY)
 
-rtsine: rtsine.cpp Stk.o SineWave.o RtWvOut.o RtAudio.o Mutex.o
-	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o rtsine rtsine.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/SineWave.o $(OBJECT_PATH)/RtWvOut.o $(OBJECT_PATH)/RtAudio.o $(OBJECT_PATH)/Mutex.o $(LIBRARY)
+rtsine: rtsine.cpp Stk.o SineWave.o RtWvOut.o Mutex.o
+	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o rtsine rtsine.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/SineWave.o $(OBJECT_PATH)/RtWvOut.o $(OBJECT_PATH)/Mutex.o $(LIBRARY) -lrtaudio
 
-crtsine: crtsine.cpp Stk.o SineWave.o RtAudio.o
-	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o crtsine crtsine.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/SineWave.o $(OBJECT_PATH)/RtAudio.o $(LIBRARY)
+crtsine: crtsine.cpp Stk.o SineWave.o
+	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o crtsine crtsine.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/SineWave.o $(LIBRARY) -lrtaudio
 
-bethree: bethree.cpp Stk.o FileRead.o FileWvIn.o FileLoop.o FM.o RtAudio.o TwoZero.o SineWave.o ADSR.o BeeThree.o
-	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o bethree bethree.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/FileRead.o $(OBJECT_PATH)/FileWvIn.o $(OBJECT_PATH)/FileLoop.o $(OBJECT_PATH)/FM.o $(OBJECT_PATH)/RtAudio.o $(OBJECT_PATH)/TwoZero.o $(OBJECT_PATH)/SineWave.o $(OBJECT_PATH)/ADSR.o $(OBJECT_PATH)/BeeThree.o $(LIBRARY)
+bethree: bethree.cpp Stk.o FileRead.o FileWvIn.o FileLoop.o FM.o TwoZero.o SineWave.o ADSR.o BeeThree.o
+	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o bethree bethree.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/FileRead.o $(OBJECT_PATH)/FileWvIn.o $(OBJECT_PATH)/FileLoop.o $(OBJECT_PATH)/FM.o $(OBJECT_PATH)/TwoZero.o $(OBJECT_PATH)/SineWave.o $(OBJECT_PATH)/ADSR.o $(OBJECT_PATH)/BeeThree.o $(LIBRARY) -lrtaudio
 
-controlbee: controlbee.cpp Stk.o FileRead.o FileWvIn.o FileLoop.o FM.o RtAudio.o TwoZero.o SineWave.o ADSR.o BeeThree.o Messager.o RtMidi.o Socket.o TcpServer.o Thread.o Mutex.o Skini.o
-	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o controlbee controlbee.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/FileRead.o $(OBJECT_PATH)/FileWvIn.o $(OBJECT_PATH)/FileLoop.o $(OBJECT_PATH)/FM.o $(OBJECT_PATH)/RtAudio.o $(OBJECT_PATH)/TwoZero.o $(OBJECT_PATH)/SineWave.o $(OBJECT_PATH)/ADSR.o $(OBJECT_PATH)/BeeThree.o $(OBJECT_PATH)/Messager.o $(OBJECT_PATH)/RtMidi.o $(OBJECT_PATH)/Socket.o $(OBJECT_PATH)/TcpServer.o $(OBJECT_PATH)/Thread.o $(OBJECT_PATH)/Mutex.o $(OBJECT_PATH)/Skini.o $(LIBRARY)
+controlbee: controlbee.cpp Stk.o FileRead.o FileWvIn.o FileLoop.o FM.o TwoZero.o SineWave.o ADSR.o BeeThree.o Messager.o Socket.o TcpServer.o Thread.o Mutex.o Skini.o
+	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o controlbee controlbee.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/FileRead.o $(OBJECT_PATH)/FileWvIn.o $(OBJECT_PATH)/FileLoop.o $(OBJECT_PATH)/FM.o $(OBJECT_PATH)/TwoZero.o $(OBJECT_PATH)/SineWave.o $(OBJECT_PATH)/ADSR.o $(OBJECT_PATH)/BeeThree.o $(OBJECT_PATH)/Messager.o $(OBJECT_PATH)/Socket.o $(OBJECT_PATH)/TcpServer.o $(OBJECT_PATH)/Thread.o $(OBJECT_PATH)/Mutex.o $(OBJECT_PATH)/Skini.o $(LIBRARY) -lrtaudio -lrtmidi
 
 foursine: foursine.cpp Stk.o SineWave.o FileWrite.o FileWvOut.o
 	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o foursine foursine.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/SineWave.o $(OBJECT_PATH)/FileWrite.o $(OBJECT_PATH)/FileWvOut.o $(LIBRARY)
 
-threebees: threebees.cpp Stk.o FileRead.o FileWvIn.o FileLoop.o FM.o RtAudio.o TwoZero.o SineWave.o ADSR.o BeeThree.o Messager.o RtMidi.o Socket.o TcpServer.o Thread.o Mutex.o Skini.o Voicer.o
-	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o threebees threebees.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/FileRead.o $(OBJECT_PATH)/FileWvIn.o $(OBJECT_PATH)/FileLoop.o $(OBJECT_PATH)/FM.o $(OBJECT_PATH)/RtAudio.o $(OBJECT_PATH)/TwoZero.o $(OBJECT_PATH)/SineWave.o $(OBJECT_PATH)/ADSR.o $(OBJECT_PATH)/BeeThree.o $(OBJECT_PATH)/Messager.o $(OBJECT_PATH)/RtMidi.o $(OBJECT_PATH)/Socket.o $(OBJECT_PATH)/TcpServer.o $(OBJECT_PATH)/Thread.o $(OBJECT_PATH)/Mutex.o $(OBJECT_PATH)/Skini.o $(OBJECT_PATH)/Voicer.o $(LIBRARY)
+threebees: threebees.cpp Stk.o FileRead.o FileWvIn.o FileLoop.o FM.o TwoZero.o SineWave.o ADSR.o BeeThree.o Messager.o Socket.o TcpServer.o Thread.o Mutex.o Skini.o Voicer.o
+	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o threebees threebees.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/FileRead.o $(OBJECT_PATH)/FileWvIn.o $(OBJECT_PATH)/FileLoop.o $(OBJECT_PATH)/FM.o $(OBJECT_PATH)/TwoZero.o $(OBJECT_PATH)/SineWave.o $(OBJECT_PATH)/ADSR.o $(OBJECT_PATH)/BeeThree.o $(OBJECT_PATH)/Messager.o $(OBJECT_PATH)/Socket.o $(OBJECT_PATH)/TcpServer.o $(OBJECT_PATH)/Thread.o $(OBJECT_PATH)/Mutex.o $(OBJECT_PATH)/Skini.o $(OBJECT_PATH)/Voicer.o $(LIBRARY) -lrtaudio -lrtmidi
 
-playsmf: playsmf.cpp Stk.o MidiFileIn.o RtMidi.o
-	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o playsmf playsmf.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/MidiFileIn.o $(OBJECT_PATH)/RtMidi.o $(LIBRARY)
+playsmf: playsmf.cpp Stk.o MidiFileIn.o
+	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o playsmf playsmf.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/MidiFileIn.o $(LIBRARY) -lrtmidi
 
-grains: grains.cpp Stk.o Granulate.o Noise.o FileRead.o RtAudio.o
-	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o grains grains.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/Granulate.o $(OBJECT_PATH)/Noise.o $(OBJECT_PATH)/FileRead.o $(OBJECT_PATH)/RtAudio.o $(LIBRARY)
+grains: grains.cpp Stk.o Granulate.o Noise.o FileRead.o
+	$(CC) $(LDFLAGS) $(CFLAGS) $(DEFS) -o grains grains.cpp $(OBJECT_PATH)/Stk.o $(OBJECT_PATH)/Granulate.o $(OBJECT_PATH)/Noise.o $(OBJECT_PATH)/FileRead.o $(LIBRARY) -lrtaudio
diff --git a/projects/examples/libMakefile.in b/projects/examples/libMakefile.in
index cc5706f..8241bc6 100644
--- a/projects/examples/libMakefile.in
+++ b/projects/examples/libMakefile.in
@@ -19,6 +19,7 @@ LIBRARY = @LIBS@
 REALTIME = @realtime@
 ifeq ($(REALTIME),yes)
   PROGRAMS += audioprobe midiprobe duplex play record inetIn inetOut rtsine crtsine bethree controlbee threebees playsmf grains
+  LIBRARY += -lrtaudio -lrtmidi
 endif
 
 RAWWAVES = @rawwaves@
diff --git a/projects/ragamatic/Makefile.in b/projects/ragamatic/Makefile.in
index 3c078f4..6426909 100644
--- a/projects/ragamatic/Makefile.in
+++ b/projects/ragamatic/Makefile.in
@@ -30,7 +30,8 @@ LIBRARY = @LIBS@
 REALTIME = @realtime@
 ifeq ($(REALTIME),yes)
   PROGRAMS = ragamat
-	OBJECTS += RtMidi.o RtAudio.o Thread.o Mutex.o Socket.o TcpServer.o @objects@
+	OBJECTS += Thread.o Mutex.o Socket.o TcpServer.o @objects@
+	LIBRARY += -lrtaudio -lrtmidi
 endif
 
 RAWWAVES = @rawwaves@
diff --git a/src/Makefile.in b/src/Makefile.in
index 739fa74..df82595 100644
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -52,7 +52,8 @@ LIBS     = @LIBS@
 
 REALTIME = @realtime@
 ifeq ($(REALTIME),yes)
-	OBJECTS += RtMidi.o RtAudio.o RtWvOut.o RtWvIn.o InetWvOut.o InetWvIn.o Thread.o Mutex.o Socket.o TcpClient.o TcpServer.o UdpSocket.o @objects@
+	OBJECTS += RtWvOut.o RtWvIn.o InetWvOut.o InetWvIn.o Thread.o Mutex.o Socket.o TcpClient.o TcpServer.o UdpSocket.o @objects@
+	LIBS += -lrtaudio -lrtmidi
 endif
 
 BUILD_STATIC = @build_static@
